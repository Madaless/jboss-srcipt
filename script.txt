@echo off
REM --- Ścieżki ---
set ZIP_FILE=C:\ścieżka\do\jboss.zip
set TARGET_DIR=C:\ścieżka_do_JBoss

REM --- Uruchomienie PowerShell z blokowaniem błędów i wyświetlaniem w konsoli ---
powershell.exe -NoProfile -ExecutionPolicy Bypass -Command ^
"try { ^
    if (Test-Path '%TARGET_DIR%') { ^
        Write-Host 'Usuwanie starego katalogu JBoss...'; ^
        Remove-Item -Path '%TARGET_DIR%' -Recurse -Force -ErrorAction Stop; ^
    } ^
} catch { Write-Host 'Błąd podczas usuwania starego katalogu:' $_ } ; ^
try { ^
    Write-Host 'Rozpakowywanie JBoss...'; ^
    Expand-Archive -Path '%ZIP_FILE%' -DestinationPath '%TARGET_DIR%' -Force -ErrorAction Stop; ^
} catch { Write-Host 'Błąd podczas rozpakowywania:' $_ } ; ^
function Replace-TextInFiles { param([string]$Path,[string]$OldText,[string]$NewText) ^
    Get-ChildItem -Path $Path -Recurse -File | ForEach-Object { ^
        try { ^
            $content = Get-Content $_.FullName -Raw -ErrorAction Stop ; ^
            if ($content -match [regex]::Escape($OldText)) { ^
                $content = $content -replace [regex]::Escape($OldText), $NewText ; ^
                Set-Content -Path $_.FullName -Value $content -ErrorAction Stop ; ^
                Write-Host 'Zmieniono w pliku:' $_.FullName ; ^
            } ^
        } catch { Write-Host 'Błąd w pliku' $_.FullName ':' $_ } ^
    } ^
} ; ^
Write-Host 'Zamiana tekstów...' ; ^
Replace-TextInFiles -Path '%TARGET_DIR%' -OldText 'XE34C' -NewText 'YU60HC' ; ^
Replace-TextInFiles -Path '%TARGET_DIR%' -OldText 'xe63hc' -NewText 'YU60HC' ; ^
Write-Host 'Gotowe.'"

REM --- Zakończenie ---
cmd /k
